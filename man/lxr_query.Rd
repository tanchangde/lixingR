% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lxr_query.R
\name{lxr_query}
\alias{lxr_query}
\title{Perform Lixinger API Query}
\usage{
lxr_query(
  api_endpoint,
  token = Sys.getenv("TOKEN_LIXINGER"),
  flatten = TRUE,
  timeout = 9,
  max_tries = 5,
  ...
)
}
\arguments{
\item{api_endpoint}{API endpoint URL for the Lixinger service.}

\item{token}{API authentication token. If not provided, the function will
attempt to use the 'TOKEN_LIXINGER' environment variable.}

\item{flatten}{Logical flag indicating whether to return the API response as
a flattened data frame. If TRUE (default), the function will convert the
nested JSON response into a flat data frame. If FALSE, the function will
return the JSON response.}

\item{timeout}{Timeout for the request, in seconds. Defaults to 9
seconds.}

\item{max_tries}{Number of retry attempts in case of request failure,
defaults to 5 attempts.}

\item{...}{Additional parameters for the query. They are validated
against the valid and required parameters for the specified
API endpoint. Invalid or missing parameters will result in an error.
Parameter names can be provided in either snake_case or camelCase format.
For example, both 'stock_codes' and 'stockCodes' are acceptable.}
}
\value{
If \code{flatten} is \code{TRUE} (default), the function returns a flattened
data frame containing the Lixinger API response data. If \code{flatten} is
\code{FALSE}, the function returns the raw JSON response.
}
\description{
Sends a request to the Lixinger API to retrieve financial data.
}
\details{
The function constructs an HTTP request to the specified Lixinger API
endpoint. It validates the query parameters against the parameters
defined in 'lxr_query_params'. It supports automatic retries and
timeout settings. The function also handles the conversion of
additional query parameters to the required JSON format.
}
\examples{
# Retrieve information for all stocks
lxr_query(api_endpoint = lxr_cn_company())

# Retrieve information for all stocks with a specific type of financial
# statements
lxr_query(api_endpoint = lxr_cn_company(), fs_type = "non_financial")

# Retrieve information for specific stocks
lxr_query(api_endpoint = lxr_cn_company(), stock_codes = c(
  "300750",
  "600519", "600157"
))

}
\references{
For more detailed information about the parameters and usage of the Lixinger
API that this function interfaces with, please visit the Lixinger
\href{https://www.lixinger.com/open/api/}{API documentation}.
}
